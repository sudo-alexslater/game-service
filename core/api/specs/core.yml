openapi: 3.0.3

info:
  title: Gaming API
  description: API for interacting with gaming APIs
  version: 0.1.0
servers:
  - url: "https://gaming.alexslater.io"
    description: Production API endpoint for the gaming API

paths:
  /health:
    get:
      operationId: get-health
      description: healthcheck endpoint
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Message"

      x-amazon-apigateway-integration:
        uri: "arn:aws:apigateway:${aws_region}:lambda:path/2015-03-31/functions/${healthcheck_arn}/invocations"
        httpMethod: "POST"
        timeoutInMillis: ${lambda_identity_timeout}
        type: "aws_proxy"
      x-amazon-apigateway-auth:
        type: "NONE"
      x-amazon-apigateway-api-key-source: "HEADER"
  /lobbies:
    get:
      operationId: list-lobbies
      description: List lobbies endpoint
      parameters:
        - name: limit
          in: query
          required: false
          schema:
            type: integer
        - name: offset
          in: query
          required: false
          schema:
            type: integer
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Lobbies"

      x-amazon-apigateway-integration:
        uri: "arn:aws:apigateway:${aws_region}:lambda:path/2015-03-31/functions/${list_lobbies_arn}/invocations"
        httpMethod: "POST"
        timeoutInMillis: ${lambda_identity_timeout}
        type: "aws_proxy"
      x-amazon-apigateway-auth:
        type: "NONE"
      x-amazon-apigateway-api-key-source: "HEADER"
    post:
      operationId: create-lobby
      description: Create lobby endpoint
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateLobbyRequest"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Lobby"

      x-amazon-apigateway-integration:
        uri: "arn:aws:apigateway:${aws_region}:lambda:path/2015-03-31/functions/${create_lobby_arn}/invocations"
        httpMethod: "POST"
        timeoutInMillis: ${lambda_identity_timeout}
        type: "aws_proxy"
      x-amazon-apigateway-auth:
        type: "NONE"
      x-amazon-apigateway-api-key-source: "HEADER"
components:
  schemas:
    ResourceId:
      type: string
    Message:
      type: object
      properties:
        message:
          type: string
    Lobby:
      type: object
      properties:
        id:
          $ref: "#/components/schemas/ResourceId"
    Lobbies:
      type: array
      items:
        $ref: "#/components/schemas/Lobby"
    CreateLobbyRequest:
      type: object
      properties:
        maxPlayers:
          type: integer
        minPlayers:
          type: integer
        required:
          - maxPlayers
          - minPlayers
